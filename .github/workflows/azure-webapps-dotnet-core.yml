name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: WebApplication9    # Namnet på din Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: 'WebApplication9/bin/Release/net8.0' # Peka direkt på byggutgången
  DOTNET_VERSION: '8'                    # .NET Core-versionen att använda

on:
  push:
    branches: [ "main" ]                 # Triggar workflow på push till "main"-grenen
  workflow_dispatch:                     # Tillåter manuell körning av workflow

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4       # Klona källkoden från ditt GitHub-repo

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Verify build directory   # Steg för att verifiera att rätt filer genereras
        run: |
          echo "Checking contents of the build directory..."
          ls -R WebApplication9/bin/Release/net8.0

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: WebApplication9/bin/Release/net8.0

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} # Använd bin/Release-katalogen direkt
